@charset "utf-8";

/** These are specific bulma styles for the slider component
* @remarks These styles are currently only written to work for is-large controls.
* @remarks The outlined modifier is not supported
* @devdoc These styles are a combination of bulma styles and the information taken
* from https://css-tricks.com/styling-cross-browser-compatible-range-inputs-css/
* The bulma-extensions npm module did unfortunately not work for me
* Also the &-Operator used in the bulmaswatch theme did not work for me
* Thus, the SCSS is rather verbose and not using any advanced functionality
*/

/* Common styles for all variants*/
$slider-track-radius: $radius !default;
$transition: box-shadow 0.1s linear;

input[type='range'].slider {
    color: $background;
    border: none;
    // Use the complete width for the track of sliders
    padding-left: 0;
    padding-right: 0;
}

/* The default box shadow for focused sliders is the text color*/
input[type='range'].slider:focus,
input[type='range'].slider.is-focused {
    box-shadow: 0 0 7px 1px $text;
}

/**
* Styling of the track and thumb, specifically for WebKit/Blink-based browsers (e.g. Google Chrome, Chromium, Microsoft Edge)
*/

input[type='range'].slider::-webkit-slider-runnable-track {
    border: 1px solid $background;
    border-radius: $radius;
    background-color: $grey-lighter;
    height: 0.5em;
}

input[type='range'].slider::-webkit-slider-thumb {
    -webkit-appearance: none;
    border-radius: 4px;
    padding-top: calc(0.375em + 1px);
    border-width: 0;
    height: calc(2.5em - 2px);
    width: 1.25em;
    cursor: pointer;

    margin-top: calc(
        -1em
    ); /* You need to specify a margin in Chrome, but in Firefox and IE it is automatic */

    transition: $transition;
    background: $text; /* use uncolored as the slider default, not the typical button outlined style*/
    box-shadow: 0 0 3px 0 rgba(0, 0, 0, 0.3) inset,
        0 1px 15px 0 rgba(0, 0, 0, 0.6) inset;
}

/*Thumb color variants*/
input[type='range'].slider.is-primary::-webkit-slider-thumb {
    background: $primary;
}
input[type='range'].slider.is-info::-webkit-slider-thumb {
    background: $info;
}
input[type='range'].slider.is-success::-webkit-slider-thumb {
    background: $success;
}
input[type='range'].slider.is-warning::-webkit-slider-thumb {
    background: $warning;
}
input[type='range'].slider.is-danger::-webkit-slider-thumb {
    background: $danger;
}
input[type='range'].slider.is-link::-webkit-slider-thumb {
    background: $link;
}

/* Hover color variants*/
input[type='range'].slider.is-hovered::-webkit-slider-thumb,
input[type='range'].slider:hover::-webkit-slider-thumb {
    border-color: rgba(0, 0, 0, 0.25);
    transition: $transition;
    box-shadow: 0 0 3px 0 rgba(0, 0, 0, 0.3) inset,
        0 1px 15px 0 rgba(0, 0, 0, 0.6) inset, 0 0 3px 0 $text;
}
input[type='range'].slider.is-primary.is-hovered::-webkit-slider-thumb,
input[type='range'].slider.is-primary:hover::-webkit-slider-thumb {
    border-color: rgba(0, 0, 0, 0.25);
    transition: $transition;
    box-shadow: 0 0 3px 0 rgba(0, 0, 0, 0.3) inset,
        0 1px 15px 0 rgba(0, 0, 0, 0.6) inset, 0 0 3px 0 $primary;
}
input[type='range'].slider.is-info.is-hovered::-webkit-slider-thumb,
input[type='range'].slider.is-info:hover::-webkit-slider-thumb {
    border-color: rgba(0, 0, 0, 0.25);
    transition: $transition;
    box-shadow: 0 0 3px 0 rgba(0, 0, 0, 0.3) inset,
        0 1px 15px 0 rgba(0, 0, 0, 0.6) inset, 0 0 3px 0 $info;
}
input[type='range'].slider.is-success.is-hovered::-webkit-slider-thumb,
input[type='range'].slider.is-success:hover::-webkit-slider-thumb {
    border-color: rgba(0, 0, 0, 0.25);
    transition: $transition;
    box-shadow: 0 0 3px 0 rgba(0, 0, 0, 0.3) inset,
        0 1px 15px 0 rgba(0, 0, 0, 0.6) inset, 0 0 3px 0 $success;
}
input[type='range'].slider.is-warning.is-hovered::-webkit-slider-thumb,
input[type='range'].slider.is-warning:hover::-webkit-slider-thumb {
    border-color: rgba(0, 0, 0, 0.25);
    transition: $transition;
    box-shadow: 0 0 3px 0 rgba(0, 0, 0, 0.3) inset,
        0 1px 15px 0 rgba(0, 0, 0, 0.6) inset, 0 0 3px 0 $warning;
}
input[type='range'].slider.is-danger.is-hovered::-webkit-slider-thumb,
input[type='range'].slider.is-danger:hover::-webkit-slider-thumb {
    border-color: rgba(0, 0, 0, 0.25);
    transition: $transition;
    box-shadow: 0 0 3px 0 rgba(0, 0, 0, 0.3) inset,
        0 1px 15px 0 rgba(0, 0, 0, 0.6) inset, 0 0 3px 0 $danger;
}
input[type='range'].slider.is-link.is-hovered::-webkit-slider-thumb,
input[type='range'].slider.is-link:hover::-webkit-slider-thumb {
    border-color: rgba(0, 0, 0, 0.25);
    transition: $transition;
    box-shadow: 0 0 3px 0 rgba(0, 0, 0, 0.3) inset,
        0 1px 15px 0 rgba(0, 0, 0, 0.6) inset, 0 0 3px 0 $link;
}

/*Thumb focus color variants*/
input[type='range'].slider.is-focused::-webkit-slider-thumb,
input[type='range'].slider:focus::-webkit-slider-thumb {
    transition: $transition;
    border-color: $text;
    box-shadow: 0 0 0 0 rgba(0, 0, 0, 0.2) inset,
        0 0 0 0 rgba(0, 0, 0, 0.5) inset, 0 0 7px 1px $text;
}
input[type='range'].slider.is-info.is-focused::-webkit-slider-thumb,
input[type='range'].slider.is-info:focus::-webkit-slider-thumb {
    transition: $transition;
    border-color: $info;
    box-shadow: 0 0 0 0 rgba(0, 0, 0, 0.2) inset,
        0 0 0 0 rgba(0, 0, 0, 0.5) inset, 0 0 7px 1px $info;
}
input[type='range'].slider.is-primary.is-focused::-webkit-slider-thumb,
input[type='range'].slider.is-primary:focus::-webkit-slider-thumb {
    transition: $transition;
    border-color: $primary;
    box-shadow: 0 0 0 0 rgba(0, 0, 0, 0.2) inset,
        0 0 0 0 rgba(0, 0, 0, 0.5) inset, 0 0 7px 1px $primary;
}
input[type='range'].slider.is-success.is-focused::-webkit-slider-thumb,
input[type='range'].slider.is-success:focus::-webkit-slider-thumb {
    transition: $transition;
    border-color: $success;
    box-shadow: 0 0 0 0 rgba(0, 0, 0, 0.2) inset,
        0 0 0 0 rgba(0, 0, 0, 0.5) inset, 0 0 7px 1px $success;
}
input[type='range'].slider.is-warning.is-focused::-webkit-slider-thumb,
input[type='range'].slider.is-warning:focus::-webkit-slider-thumb {
    transition: $transition;
    border-color: $warning;
    box-shadow: 0 0 0 0 rgba(0, 0, 0, 0.2) inset,
        0 0 0 0 rgba(0, 0, 0, 0.5) inset, 0 0 7px 1px $warning;
}
input[type='range'].slider.is-danger.is-focused::-webkit-slider-thumb,
input[type='range'].slider.is-danger:focus::-webkit-slider-thumb {
    transition: $transition;
    border-color: $danger;
    box-shadow: 0 0 0 0 rgba(0, 0, 0, 0.2) inset,
        0 0 0 0 rgba(0, 0, 0, 0.5) inset, 0 0 7px 1px $danger;
}
input[type='range'].slider.is-link.is-focused::-webkit-slider-thumb,
input[type='range'].slider.is-link:focus::-webkit-slider-thumb {
    transition: $transition;
    border-color: $link;
    box-shadow: 0 0 0 0 rgba(0, 0, 0, 0.2) inset,
        0 0 0 0 rgba(0, 0, 0, 0.5) inset, 0 0 7px 1px $link;
}

/* Active (color-independent) */
input[type='range'].slider.is-active::-webkit-slider-thumb,
input[type='range'].slider:active::-webkit-slider-thumb {
    transition: $transition;
    border-color: rgba(0, 0, 0, 0.47);
    box-shadow: 0 0 3px 0 rgba(0, 0, 0, 0.7) inset,
        0 1px 15px 0 rgba(0, 0, 0, 0.9) inset;
}

/**
* Styling of the track and thumb, specifically for Mozilla/Gecko-based browsers (e.g. Firefox)
*/
input[type='range'].slider::-moz-range-track {
    border: 1px solid $background;
    border-radius: $radius;
    background-color: $grey-lighter;
    height: 0.5em;
}

input[type='range'].slider::-moz-range-thumb {
    -webkit-appearance: none;
    border-radius: 4px;
    padding-top: calc(0.375em + 1px);
    border-width: 0;
    height: calc(2.5em - 2px);
    width: 1.25em;
    cursor: pointer;

    margin-top: calc(
        -1em
    ); /* You need to specify a margin in Chrome, but in Firefox and IE it is automatic */

    transition: $transition;
    background: $text; /* use uncolored as the slider default, not the typical button outlined style*/
    box-shadow: 0 0 3px 0 rgba(0, 0, 0, 0.3) inset,
        0 1px 15px 0 rgba(0, 0, 0, 0.6) inset;
}

/*Thumb color variants*/
input[type='range'].slider.is-primary::-moz-range-thumb {
    background: $primary;
}
input[type='range'].slider.is-info::-moz-range-thumb {
    background: $info;
}
input[type='range'].slider.is-success::-moz-range-thumb {
    background: $success;
}
input[type='range'].slider.is-warning::-moz-range-thumb {
    background: $warning;
}
input[type='range'].slider.is-danger::-moz-range-thumb {
    background: $danger;
}
input[type='range'].slider.is-link::-moz-range-thumb {
    background: $link;
}

/* Hover color variants*/
input[type='range'].slider.is-hovered::-moz-range-thumb,
input[type='range'].slider:hover::-moz-range-thumb {
    border-color: rgba(0, 0, 0, 0.25);
    transition: $transition;
    box-shadow: 0 0 3px 0 rgba(0, 0, 0, 0.3) inset,
        0 1px 15px 0 rgba(0, 0, 0, 0.6) inset, 0 0 3px 0 $text;
}
input[type='range'].slider.is-primary.is-hovered::-moz-range-thumb,
input[type='range'].slider.is-primary:hover::-moz-range-thumb {
    border-color: rgba(0, 0, 0, 0.25);
    transition: $transition;
    box-shadow: 0 0 3px 0 rgba(0, 0, 0, 0.3) inset,
        0 1px 15px 0 rgba(0, 0, 0, 0.6) inset, 0 0 3px 0 $primary;
}
input[type='range'].slider.is-info.is-hovered::-moz-range-thumb,
input[type='range'].slider.is-info:hover::-moz-range-thumb {
    border-color: rgba(0, 0, 0, 0.25);
    transition: $transition;
    box-shadow: 0 0 3px 0 rgba(0, 0, 0, 0.3) inset,
        0 1px 15px 0 rgba(0, 0, 0, 0.6) inset, 0 0 3px 0 $info;
}
input[type='range'].slider.is-success.is-hovered::-moz-range-thumb,
input[type='range'].slider.is-success:hover::-moz-range-thumb {
    border-color: rgba(0, 0, 0, 0.25);
    transition: $transition;
    box-shadow: 0 0 3px 0 rgba(0, 0, 0, 0.3) inset,
        0 1px 15px 0 rgba(0, 0, 0, 0.6) inset, 0 0 3px 0 $success;
}
input[type='range'].slider.is-warning.is-hovered::-moz-range-thumb,
input[type='range'].slider.is-warning:hover::-moz-range-thumb {
    border-color: rgba(0, 0, 0, 0.25);
    transition: $transition;
    box-shadow: 0 0 3px 0 rgba(0, 0, 0, 0.3) inset,
        0 1px 15px 0 rgba(0, 0, 0, 0.6) inset, 0 0 3px 0 $warning;
}
input[type='range'].slider.is-danger.is-hovered::-moz-range-thumb,
input[type='range'].slider.is-danger:hover::-moz-range-thumb {
    border-color: rgba(0, 0, 0, 0.25);
    transition: $transition;
    box-shadow: 0 0 3px 0 rgba(0, 0, 0, 0.3) inset,
        0 1px 15px 0 rgba(0, 0, 0, 0.6) inset, 0 0 3px 0 $danger;
}
input[type='range'].slider.is-link.is-hovered::-moz-range-thumb,
input[type='range'].slider.is-link:hover::-moz-range-thumb {
    border-color: rgba(0, 0, 0, 0.25);
    transition: $transition;
    box-shadow: 0 0 3px 0 rgba(0, 0, 0, 0.3) inset,
        0 1px 15px 0 rgba(0, 0, 0, 0.6) inset, 0 0 3px 0 $link;
}

/*Thumb focus color variants*/
input[type='range'].slider.is-focused::-moz-range-thumb,
input[type='range'].slider:focus::-moz-range-thumb {
    transition: $transition;
    border-color: $text;
    box-shadow: 0 0 0 0 rgba(0, 0, 0, 0.2) inset,
        0 0 0 0 rgba(0, 0, 0, 0.5) inset, 0 0 7px 1px $text;
}
input[type='range'].slider.is-info.is-focused::-moz-range-thumb,
input[type='range'].slider.is-info:focus::-moz-range-thumb {
    transition: $transition;
    border-color: $info;
    box-shadow: 0 0 0 0 rgba(0, 0, 0, 0.2) inset,
        0 0 0 0 rgba(0, 0, 0, 0.5) inset, 0 0 7px 1px $info;
}
input[type='range'].slider.is-primary.is-focused::-moz-range-thumb,
input[type='range'].slider.is-primary:focus::-moz-range-thumb {
    transition: $transition;
    border-color: $primary;
    box-shadow: 0 0 0 0 rgba(0, 0, 0, 0.2) inset,
        0 0 0 0 rgba(0, 0, 0, 0.5) inset, 0 0 7px 1px $primary;
}
input[type='range'].slider.is-success.is-focused::-moz-range-thumb,
input[type='range'].slider.is-success:focus::-moz-range-thumb {
    transition: $transition;
    border-color: $success;
    box-shadow: 0 0 0 0 rgba(0, 0, 0, 0.2) inset,
        0 0 0 0 rgba(0, 0, 0, 0.5) inset, 0 0 7px 1px $success;
}
input[type='range'].slider.is-warning.is-focused::-moz-range-thumb,
input[type='range'].slider.is-warning:focus::-moz-range-thumb {
    transition: $transition;
    border-color: $warning;
    box-shadow: 0 0 0 0 rgba(0, 0, 0, 0.2) inset,
        0 0 0 0 rgba(0, 0, 0, 0.5) inset, 0 0 7px 1px $warning;
}
input[type='range'].slider.is-danger.is-focused::-moz-range-thumb,
input[type='range'].slider.is-danger:focus::-moz-range-thumb {
    transition: $transition;
    border-color: $danger;
    box-shadow: 0 0 0 0 rgba(0, 0, 0, 0.2) inset,
        0 0 0 0 rgba(0, 0, 0, 0.5) inset, 0 0 7px 1px $danger;
}
input[type='range'].slider.is-link.is-focused::-moz-range-thumb,
input[type='range'].slider.is-link:focus::-moz-range-thumb {
    transition: $transition;
    border-color: $link;
    box-shadow: 0 0 0 0 rgba(0, 0, 0, 0.2) inset,
        0 0 0 0 rgba(0, 0, 0, 0.5) inset, 0 0 7px 1px $link;
}

/* Active (color-independent) */
input[type='range'].slider.is-active::-moz-range-thumb,
input[type='range'].slider:active::-moz-range-thumb {
    transition: $transition;
    border-color: rgba(0, 0, 0, 0.47);
    box-shadow: 0 0 3px 0 rgba(0, 0, 0, 0.7) inset,
        0 1px 15px 0 rgba(0, 0, 0, 0.9) inset;
}
